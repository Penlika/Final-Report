@model Final_Report.Models.HotelDetailsViewModel
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-fz5GFiGHVrZvMWjQPsWqmtUjfvqg3XpZ5oKLj3E2TFi6zUpFJBrTbUzD1ezy/gpDg57EY4JRxk21NaQZt54MRw==" crossorigin="anonymous" />

<div class="comment-and-rating-section">
    <div class="average-rating">
        Average Rating: @Model.AverageRating.ToString("0.0") <i class="fas fa-star"></i>
    </div>

    <div style=" display: flex;">
        @using (Html.BeginForm("AddOrUpdateCommentAndRating", "Booking", new { hotelId = Model.Hotel.ID }, FormMethod.Post))
        {
            @Html.Hidden("hotelId", Model.Hotel.ID)

            if (Model.UserHasCommented)
            {
                <div class="form-group">
                    @Html.Label("Your Comment:")
                    @Html.TextArea("comment", Model.UserHasCommented ? Model.UserComment : null, new { @class = "form-control", required = "required" })
                </div>

                @Html.Label("Your Rating:")
                <div class="star-rating">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <i class="fas fa-star" data-rating="@i"></i>
                    }
                    <input type="hidden" name="rating" id="rating" value="@Model.UserRating" />
                </div>
                <button type="submit" class="btn btn-primary">Edit</button>
            }
            else
            {
                <div class="form-group">
                    @Html.Label("Comment:")
                    @Html.TextArea("comment", Model.UserHasCommented ? Model.UserComment : null, new { @class = "form-control", required = "required" })
                </div>
                <div class="form-group">
                    @Html.Label("Your Rating:")
                    <div class="star-rating" id="star-rating">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <i class="far fa-star" data-rating="@i"></i>
                        }
                        <input type="hidden" name="rating" id="rating" />
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            }
        }
    <div style="align-self:end;margin-left:-100px">
        @using (Html.BeginForm("DeleteCommentAndRating", "Booking", new { commentId = Model.UserCommentId, hotelId = Model.Hotel.ID }, FormMethod.Post, new { id = "deleteForm" }))
        {
            @Html.Hidden("commentId", Model.UserCommentId)
            @Html.Hidden("hotelId", Model.Hotel.ID)

            if (Model.UserHasCommented)
            {
                <button type="submit" class="btn btn-danger">Delete</button>
            }
        }

    </div>
    </div>


    <br />
    <hr />
    @if (Model.CommentsAndRatings != null && Model.CommentsAndRatings.Any())
    {
        <div class="comments-container" style="max-height: 900px; overflow-y: auto; padding: 10px;">
            @foreach (var commentRating in Model.CommentsAndRatings.OrderByDescending(c => c.DateCreate))
            {
                <div class="user-info" style="display: flex; align-items: center;">
                    <img src="@(!string.IsNullOrEmpty(commentRating.UserPictureUrl) ? commentRating.UserPictureUrl : "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png")" class="rounded-circle profile-image" style="width: 50px; height: 50px;">
                    <p class="username" style="margin-left: 10px; margin-top: 10px">@commentRating.UserName</p>
                </div>
                <div class="comment-details" style="padding-top: 10px">
                    <div class="read-only">
                        <p>@commentRating.Comment</p>
                        <div class="ratings">
                            Rating:
                            @{
                                for (int i = 0; i < commentRating.StarRating; i++)
                                {
                                    <i class="fas fa-star"></i>
                                }
                            }
                        </div>
                        <div>Posted: @Html.DisplayFor(model => commentRating.DateCreate)</div>
                    </div>
                </div>
                <hr>
            }
        </div>
    }
    else
    {
        <p>No comments and ratings available.</p>
    }



</div>
<script>
    $(document).ready(function () {
        // Click event for star icons
        $('.star-rating i').click(function () {
            var rating = $(this).data('rating');
            $('#rating').val(rating); // Set the hidden input value
            updateStars(rating); // Update the visual appearance of stars
        });

        // Update the appearance of stars based on the selected rating
        function updateStars(rating) {
            $('.star-rating i').removeClass('fas').addClass('far'); // Reset all stars
            $('.star-rating i:lt(' + rating + ')').removeClass('far').addClass('fas'); // Highlight selected stars
        }

        // Initialize stars based on the initial rating
        updateStars(@Model.UserRating);
    });
</script>
